<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

    <!-- Adding gazebo plugin for control  -->
  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>$(arg robot_name)</robotNamespace>
      <robotParam>$(arg robot_name)_description</robotParam>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
      <legacyModeNS>true</legacyModeNS>
    </plugin>
  </gazebo>

  <xacro:if value="$(arg enable_lidar)">
    <gazebo reference="${lidar_link_name}">
      <sensor type="ray" name="${lidar_link_name}">
          <pose>0 0 0 0 0 0</pose>
          <visualize>${visualize_scan}</visualize>
          <update_rate>25</update_rate>
          <ray>
              <scan>
                  <horizontal>
                      <samples>720</samples>
                      <resolution>0.25</resolution>
                      <min_angle>${min_scan_angle}</min_angle>
                      <max_angle>${max_scan_angle}</max_angle>
                  </horizontal>
              </scan>
              <range>
                  <min>${min_scan_range}</min>
                  <max>${max_scan_range}</max>
                  <resolution>0.25</resolution>
              </range>
              <noise>
                  <type>gaussian</type>
                  <mean>0.0</mean>
                  <stddev>0.01</stddev>
              </noise>
          </ray>
          <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
              <!-- <robotNamespace>$(arg robot_name)</robotNamespace> -->
              <topicName>$(arg robot_name)/scan</topicName>
              <frameName>${lidar_link_name}</frameName>
          </plugin>
      </sensor>
    </gazebo>
  </xacro:if>

  <xacro:if value="$(arg enable_imu)">
    <gazebo reference="${imu_link_name}">
      <gravity>true</gravity>
      <sensor name="imu_sensor" type="imu">
        <always_on>true</always_on>
        <update_rate>100</update_rate>
        <visualize>true</visualize>
        <topic>__default_topic__</topic>
        <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
          <!-- <robotNamespace>$(arg robot_name)</robotNamespace> -->
          <topicName>$(arg robot_name)/imu</topicName>
          <bodyName>${imu_link_name}</bodyName>
          <updateRateHZ>10.0</updateRateHZ>
          <gaussianNoise>0.0</gaussianNoise>
          <xyzOffset>0 0 0</xyzOffset>
          <rpyOffset>0 0 0</rpyOffset>
          <frameName>${imu_link_name}</frameName>
          <initialOrientationAsReference>false</initialOrientationAsReference>
        </plugin>
        <pose>0 0 0 0 0 0</pose>
      </sensor>
    </gazebo>
  </xacro:if>

  <xacro:if value="$(arg enable_stereo)">
    <gazebo reference="${camera_link_name}">
      <turnGravityOff>true</turnGravityOff>
      <sensor type="depth" name="camera_realsense_depth">
        <update_rate>${camera_fps}</update_rate>
        <camera>
          <!-- 75x65 degree FOV for the depth sensor -->
          <horizontal_fov>${camera_h_fov}</horizontal_fov>
          <vertical_fov>${camera_v_fov}</vertical_fov>

          <image>
            <width>${camera_width}</width>
            <height>${camera_height}</height>
            <!-- TODO: check what format the Realsense hardware delivers and set this to match! -->
            <format>RGB8</format>
          </image>
          <clip>
            <!-- give the color sensor a maximum range of 50m so that the simulation renders nicely -->
            <near>0.01</near>
            <far>50.0</far>
          </clip>
        </camera>
        <plugin name="kinect_controller" filename="libgazebo_ros_openni_kinect.so">
          <!-- <robotNamespace>$(arg robot_name)</robotNamespace> -->
          <baseline>0.2</baseline>
          <alwaysOn>true</alwaysOn>
          <updateRate>${camera_fps}</updateRate>
          <cameraName>$(arg robot_name)/realsense</cameraName>
          <imageTopicName>color/image_raw</imageTopicName>
          <cameraInfoTopicName>color/camera_info</cameraInfoTopicName>
          <depthImageTopicName>depth/image_rect_raw</depthImageTopicName>
          <depthImageInfoTopicName>depth/camera_info</depthImageInfoTopicName>
          <pointCloudTopicName>depth/color/points</pointCloudTopicName>
          <frameName>${camera_link_name}_gazebo</frameName>
          <pointCloudCutoff>${min_camera_range}</pointCloudCutoff>
          <pointCloudCutoffMax>${max_camera_range}</pointCloudCutoffMax>
          <distortionK1>0.00000001</distortionK1>
          <distortionK2>0.00000001</distortionK2>
          <distortionK3>0.00000001</distortionK3>
          <distortionT1>0.00000001</distortionT1>
          <distortionT2>0.00000001</distortionT2>
          <CxPrime>0</CxPrime>
          <Cx>0</Cx>
          <Cy>0</Cy>
          <focalLength>0</focalLength>
          <hackBaseline>0</hackBaseline>
        </plugin>
      </sensor>
    </gazebo>
  </xacro:if>

  <xacro:if value="$(arg enable_gps)">
    <gazebo>
      <plugin name="gps_controller" filename="libhector_gazebo_ros_gps.so">
        <!-- <robotNamespace>$(arg robot_name)</robotNamespace> -->
        <updateRate>40</updateRate>
        <bodyName>${gps_link_name}</bodyName>
        <frameId>${gps_link_name}</frameId>
        <topicName>$(arg robot_name)/navsat/fix</topicName>
        <velocityTopicName>$(arg robot_name)/navsat/vel</velocityTopicName>
        <referenceLatitude>49.9</referenceLatitude>
        <referenceLongitude>8.9</referenceLongitude>
        <referenceHeading>0</referenceHeading>
        <referenceAltitude>0</referenceAltitude>
        <drift>0.0001 0.0001 0.0001</drift>
      </plugin>
    </gazebo>
  </xacro:if>

</robot>